function studyInfo=wdrawmyscaleS(studyInfo)
%   function studyInfo=wdrawmyscaleS(studyInfo)
%
%   This funtion generates the drawmyscaleS script for study experiments
%   created with the AudExpCreator.
%
% (c) Duc T. Nguyen and Blair Kaneshiro, 2017
% Distributed under Creative Commons Zero (CC0) license
% Contact: audexpcreator@gmail.com

line{1}=sprintf(['function drawmyscaleS(wPtr, fontColor, xC, yC,'... 
    ' sL, x, %s, trigIndex)'], studyInfo.insStructName);

line{2}=sprintf('%% %s', line{1});
line{3}='% This function actually prints the stim instruction and the instruction extremities';
line{4}='% (low and high) on the screen. This function also draws the slider on the screen,'; 
line{5}='% the end markers, and the sliding marker. ';
dLines=5;
line{dLines+1}='%';
line{dLines+2}='% This script was generated by AudExpCreator.';
line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
line{dLines+5}='% Contact: audexpcreator@gmail.com';
dOS=5;

tabLine=[dOS+16 dOS+19 dOS+22 dOS+24 dOS+26 dOS+29 dOS+31];

line{dOS+9}='Screen(''TextSize'', wPtr, 20);';
line{dOS+10}=sprintf('myQtext=%s(trigIndex).instruction;', studyInfo.insStructName);
line{dOS+11}='[~, ~, ~] = DrawFormattedText(wPtr, myQtext, ''center'', yC-100, fontColor);';
line{dOS+13}='Screen(''TextSize'', wPtr, 15);';
line{dOS+14}=sprintf('myLtext=%s(trigIndex).insLow;', studyInfo.insStructName);
line{dOS+15}='[~, ~, ~] = DrawFormattedText(wPtr, myLtext, ''center'', ''center'', fontColor, ...';
line{dOS+16}='[], [], [], [], [], [(xC-sL)-250 yC+100 (xC-sL)+250 yC+200]);';
line{dOS+17}=sprintf('myRtext=%s(trigIndex).insHigh;',studyInfo.insStructName);
line{dOS+18}='[~, ~, ~] = DrawFormattedText(wPtr, myRtext, ''center'', ''center'', fontColor, ...';
line{dOS+19}='[], [], [], [], [], [(xC+sL)-250 yC+100 (xC+sL)+250 yC+200]);';
line{dOS+21}='Screen(''DrawLine'', wPtr, fontColor, (xC+sL ), (yC+200), ...';
line{dOS+22}='(xC-sL), (yC+200), 2);';
line{dOS+23}='Screen(''DrawLine'', wPtr, fontColor, (xC+sL ), (yC+180),...';
line{dOS+24}='(xC+sL), (yC+220), 2);';
line{dOS+25}='Screen(''DrawLine'', wPtr, fontColor, (xC-sL ), (yC+180),...';
line{dOS+26}='(xC-sL), (yC+220), 2);';
line{dOS+28}='if x<=(xC-sL)';
line{dOS+29}='x=xC-sL;';
line{dOS+30}='elseif x>=(xC+sL)';
line{dOS+31}='x=(xC+sL);';
line{dOS+32}='end';
line{dOS+34}='Screen(''DrawLine'', wPtr, fontColor, x, yC+190, x, yC+210, 6);';
line{dOS+36}='end';

studyInfo.fLine.drawmsS = line{1}(10:end);

fName = 'drawmyscaleS';
fID = fopen([studyInfo.path filesep fName '.m'],'w');
for i=1:length(line)
    if any(ismember(i,tabLine))
        fprintf(fID,'\t%s\n',line{i});
    else
        fprintf(fID,'%s\n',line{i});
    end
end
fclose(fID);
