function studyInfo=wQuestionTrial(studyInfo,rOpts,yesData)
%   function studyInfo=wQuestionTrial(studyInfo,rOpts,yesData)
%
%   This funtion generates the questionTrial script for study 
%   experiments created with the AudExpCreator.
%
% (c) Duc T. Nguyen and Blair Kaneshiro, 2017
% Distributed under Creative Commons Zero (CC0) license
% Contact: audexpcreator@gmail.com

tabLine=[];
dTabLine=[];
tTabLine=[];

if yesData
    switch rOpts
        case 1
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex, s)'], studyInfo.qStructName);
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)%%, s)'], studyInfo.qStructName);
            else
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)'], studyInfo.qStructName);
            end
            
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with options to choose from';
            line{4}='% a scale of key press 1 (low extremity) to 9 (high extremity) to best answer';
            line{5}='% the question. Exiting the screen is very any key press from 1 - 9. Or from the';
            line{6}='% force quit key.';
            dLines=6;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;

            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}=sprintf('escapeKey = KbName(''%s'');', studyInfo.fQuitKey);
            subL=dOS+9;
            
            kbNums = {'1!' '2@' '3#' '4$' '5%' '6^' '7&' '8*' '9('};
            for i=1:length(kbNums)
                line{subL+i}=sprintf('num%02d = KbName(''%s'');', i, kbNums{i});
            end
            subL=subL+i+1;
            
            line{subL+1}=sprintf('qLow=%s(trigIndex).qLow{q};', studyInfo.qStructName);
            line{subL+2}=sprintf('qHigh=%s(trigIndex).qHigh{q};',studyInfo.qStructName);
            line{subL+3}=sprintf('qLine{1}=%s(trigIndex).question{q};', studyInfo.qStructName);
            line{subL+4}='qLine{2}=sprintf(''On a scale of 1 (%s) to 9 (%s),'',qLow,qHigh);';
            line{subL+5}='qLine{3}=''use the number keys at the top of the keyboard.'';';
            line{subL+7}='onQ=true;';
            line{subL+8}='tic;';
            line{subL+9}='while onQ';
            line{subL+10}='Screen(''FillRect'',wPtr,bgColor);';
            line{subL+11}='Screen(''TextSize'', wPtr, 20);';
            line{subL+12}='mytext = sprintf(''%s \n\n%s \n\n%s'',qLine{1},qLine{2},qLine{3});';
            line{subL+13}=sprintf(['[~, ~, ~] = DrawFormattedText(wPtr, mytext,',...
                '''center'', ''center'', fontColor);']);
            line{subL+14}='Screen(wPtr, ''Flip'');';
            line{subL+15}='HideCursor;';
            line{subL+16}='[~, keyCode, ~] = KbWait([], 2);';
            tabLine=subL+10:subL+16;
            dTabLine=[];
            tTabLine=[];
            subL=subL+16;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clearDin(s)';
                        line{subL+3}='s.stop();';
                        line{subL+4}='release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='% clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='% clearDin(s)';
                        line{subL+3}='% s.stop();';
                        line{subL+4}='% release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='% clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='if status~=0';
                        line{subL+5}='display([erMS ''. Goodbye.''])';
                        line{subL+6}='error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='if status~=0';
                        line{subL+5}='display([erMS ''. Goodbye.''])';
                        line{subL+6}='error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='% if status~=0';
                        line{subL+5}='% display([erMS ''. Goodbye.''])';
                        line{subL+6}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='% end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='% if status~=0';
                        line{subL+5}='% display([erMS ''. Goodbye.''])';
                        line{subL+6}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='% end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    end
                end
            else
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('res=%g;',k);
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('res=%g;',k);
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            end
            
            line{subL+1}='end';
            line{subL+2}='end';
            tabLine=[tabLine subL+1];
            
        case 2
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex, s)'], studyInfo.qStructName);
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)%%, s)'], studyInfo.qStructName);
            else
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)'], studyInfo.qStructName);
            end
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with options to choose from';
            line{4}='% a scale of key press 1 (low extremity) to 5 (high extremity) to best answer';
            line{5}='% the question. Exiting the screen is very any key press from 1 - 5. Or from the';
            line{6}='% force quit key.';
            dLines=6;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}=sprintf('escapeKey = KbName(''%s'');', studyInfo.fQuitKey);
            subL=dOS+9;
            
            kbNums = {'1!' '2@' '3#' '4$' '5%'};
            for i=1:length(kbNums)
                line{subL+i}=sprintf('num%02d = KbName(''%s'');', i, kbNums{i});
            end
            subL=subL+i+1;
            
            line{subL+1}=sprintf('qLow=%s(trigIndex).qLow{q};', studyInfo.qStructName);
            line{subL+2}=sprintf('qHigh=%s(trigIndex).qHigh{q};',studyInfo.qStructName);
            line{subL+3}=sprintf('qLine{1}=%s(trigIndex).question{q};', studyInfo.qStructName);
            line{subL+4}='qLine{2}=sprintf(''On a scale of 1 (%s) to 5 (%s),'',qLow,qHigh);';
            line{subL+5}='qLine{3}=''use the number keys at the top of the keyboard.'';';
            line{subL+7}='onQ=true;';
            line{subL+8}='tic;';
            line{subL+9}='while onQ';
            line{subL+10}='Screen(''FillRect'',wPtr,bgColor);';
            line{subL+11}='Screen(''TextSize'', wPtr, 20);';
            line{subL+12}='mytext = sprintf(''%s \n\n%s \n\n%s'',qLine{1},qLine{2},qLine{3});';
            line{subL+13}=sprintf(['[~, ~, ~] = DrawFormattedText(wPtr, mytext,',...
                '''center'', ''center'', fontColor);']);
            line{subL+14}='Screen(wPtr, ''Flip'');';
            line{subL+15}='HideCursor;';
            line{subL+16}='[~, keyCode, ~] = KbWait([], 2);';
            tabLine=subL+10:subL+16;
            dTabLine=[];
            tTabLine=[];
            subL=subL+16;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clearDin(s)';
                        line{subL+3}='s.stop();';
                        line{subL+4}='release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='% clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='% clearDin(s)';
                        line{subL+3}='% s.stop();';
                        line{subL+4}='% release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='% clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='if status~=0';
                        line{subL+5}='display([erMS ''. Goodbye.''])';
                        line{subL+6}='error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='if status~=0';
                        line{subL+5}='display([erMS ''. Goodbye.''])';
                        line{subL+6}='error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='% if status~=0';
                        line{subL+5}='% display([erMS ''. Goodbye.''])';
                        line{subL+6}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='% end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='% if status~=0';
                        line{subL+5}='% display([erMS ''. Goodbye.''])';
                        line{subL+6}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='% end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    end
                end
            else
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('res=%g;',k);
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('res=%g;',k);
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            end
            
            line{subL+1}='end';
            line{subL+2}='end';
            tabLine=[tabLine subL+1];
            
        case 3
            
            studyInfo=wdrawmyscaleQ(studyInfo);
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready')
                line{1}=sprintf(['function [res,rTime]=questionTrial',...
                    '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex, s)'], studyInfo.qStructName);
                
                line{24}='clearDin(s)';
                line{25}='s.stop();';
                line{26}='release(s);';
                
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function [res,rTime]=questionTrial',...
                    '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex)%%, s)'], studyInfo.qStructName);
                
                line{24}='% clearDin(s)';
                line{25}='% s.stop();';
                line{26}='% release(s);';
            else
                line{1}=sprintf(['function [res,rTime]=questionTrial',...
                    '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex)'], studyInfo.qStructName);
                
            end
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with an analog slider that is';
            line{4}='% mouse controlled so you can move the slider from the low extremity to the high';
            line{5}='% extremity to best rate your response to the question. The slider scale translate';
            line{6}='% from 0 - 100 for any behavioral studies and 1-10 for any eeg or neurophysiological';
            line{7}='% study.';
            dLines=7;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            
            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}='[xC, yC] = RectCenter(wRect);';
            line{dOS+10}='sL = 400;';
            line{dOS+11}='x = xC; y = yC;';
            line{dOS+13}='SetMouse(x, y, wPtr)';
            line{dOS+14}='buttons = [];';
            line{dOS+15}='tic;';
            line{dOS+16}='while ~any(buttons)';
            line{dOS+17}='Screen(''FillRect'',wPtr,bgColor);';
            line{dOS+18}=sprintf('%s;',studyInfo.fLine.drawmsQ);
            line{dOS+19}='Screen(''Flip'',wPtr);';
            line{dOS+20}='HideCursor;';
            line{dOS+21}='[x, ~, buttons] = GetMouse;';
            line{dOS+22}='[~, ~, keyCode] = KbCheck;';
            line{dOS+23}=sprintf('if keyCode(KbName(''%s''))',studyInfo.fQuitKey);
            line{dOS+27}='clear all;';
            line{dOS+28}='sca';
            line{dOS+29}='end';
            line{dOS+30}='end';
            line{dOS+31}='rTime = toc;';
            tabLine=[dOS+17:dOS+23 dOS+29];
            dTabLine=dOS+24:dOS+28;
            subL=dOS+32;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready')
                line{subL+1}='if x<=(xC-sL)';
                line{subL+2}='xScaled=1;';
                line{subL+3}='elseif x>=(xC+sL)';
                line{subL+4}='xScaled=100;';
                line{subL+5}='else';
                line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='end';
                line{subL+9}='res=round(xScaled/10);';
                line{subL+10}='s.outputSingleScan(de2bi(res,12));';
                line{subL+11}='clearDin(s)';
                tabLine=[tabLine subL+2 subL+4 subL+6];
                subL=subL+12;
                
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{subL+1}='if x<=(xC-sL)';
                line{subL+2}='xScaled=1;';
                line{subL+3}='elseif x>=(xC+sL)';
                line{subL+4}='xScaled=100;';
                line{subL+5}='else';
                line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='end';
                line{subL+9}='res=round(xScaled/10);';
                line{subL+10}='% s.outputSingleScan(de2bi(res,12));';
                line{subL+11}='% clearDin(s)';
                tabLine=[tabLine subL+2 subL+4 subL+6];
                subL=subL+12;
                
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                line{subL+1}='if x<=(xC-sL)';
                line{subL+2}='xScaled=1;';
                line{subL+3}='elseif x>=(xC+sL)';
                line{subL+4}='xScaled=100;';
                line{subL+5}='else';
                line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='end';
                line{subL+9}='res=round(xScaled/10);';
                line{subL+10}='[status, erMS] = NetStation(''Event'',sprintf(''%04g'',res));';
                line{subL+11}='if status~=0';
                line{subL+12}='display([erMS ''. Goodbye.''])';
                line{subL+13}='error(''Failure in sending event to NetStation.'');';
                line{subL+14}='end';
                tabLine=[tabLine subL+2 subL+4 subL+6 subL+12:subL+13];
                subL=subL+15;
                
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                line{subL+1}='if x<=(xC-sL)';
                line{subL+2}='xScaled=1;';
                line{subL+3}='elseif x>=(xC+sL)';
                line{subL+4}='xScaled=100;';
                line{subL+5}='else';
                line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='end';
                line{subL+9}='res=round(xScaled/10);';
                line{subL+10}='% [status, erMS] = NetStation(''Event'',sprintf(''%04g'',res));';
                line{subL+11}='% if status~=0';
                line{subL+12}='% display([erMS ''. Goodbye.''])';
                line{subL+13}='% error(''Failure in sending event to NetStation.'');';
                line{subL+14}='% end';
                tabLine=[tabLine subL+2 subL+4 subL+6 subL+12:subL+13];
                subL=subL+15;
                
            else
                if strcmp(studyInfo.type,'Comparison Behav. Rating Study')
                    line{subL+1}='if x<=(xC-sL)';
                    line{subL+2}='aScaled=100;';
                    line{subL+3}='bScaled=-100;';
                    line{subL+4}='elseif x>=(xC+sL)';
                    line{subL+5}='aScaled=-100;';
                    line{subL+6}='bScaled=100;';
                    line{subL+7}='elseif x==xC';
                    line{subL+8}='aScaled=0;';
                    line{subL+9}='bScaled=0;';
                    line{subL+10}='else';
                    line{subL+11}='aScaled=100-((x-(xC-sL))*(1./4));';
                    line{subL+12}='bScaled=-aScaled;';
                    line{subL+13}='end';
                    line{subL+14}='res=[aScaled bScaled];';
                    tabLine=[tabLine subL+2:subL+3 subL+5:subL+6 subL+8:subL+9 subL+11:subL+12];
                    subL=subL+15;
                else
                    line{subL+1}='if x<=(xC-sL)';
                    line{subL+2}='xScaled=0;';
                    line{subL+3}='elseif x>=(xC+sL)';
                    line{subL+4}='xScaled=100;';
                    line{subL+5}='else';
                    line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                    line{subL+7}='end';
                    line{subL+9}='res=xScaled;';
                    tabLine=[tabLine subL+2 subL+4 subL+6];
                    subL=subL+10;
                end
            end
            
            line{subL+1}='tic';
            line{subL+2}='while toc<.3';
            line{subL+3}='end';
            line{subL+4}='Screen(''Close'');';

            
            
        case 4
            
            nthNum=studyInfo.questSOpts.nthNum;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex, s)'], studyInfo.qStructName);
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)%%, s)'], studyInfo.qStructName);
            else
                line{1}=sprintf(['function [res,rTime]=questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)'], studyInfo.qStructName);
            end
            
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with options to choose from';
            line{4}=sprintf('%% a scale of key press 1 (low extremity) to %g (high extremity) to best answer', nthNum);
            line{5}=sprintf('%% the question. Exiting the screen is very any key press from 1 - %g. Or from the', nthNum);
            line{6}='% force quit key.';
            dLines=6;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            
            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}=sprintf('escapeKey = KbName(''%s'');', studyInfo.fQuitKey);
            subL=dOS+9;
            
            kbNums = {'1!' '2@' '3#' '4$' '5%' '6^' '7&' '8*' '9('};
            for i=1:nthNum
                line{subL+i}=sprintf('num%02d = KbName(''%s'');', i, kbNums{i});
            end
            subL=subL+i+1;
            
            line{subL+1}=sprintf('qLow=%s(trigIndex).qLow{q};', studyInfo.qStructName);
            line{subL+2}=sprintf('qHigh=%s(trigIndex).qHigh{q};',studyInfo.qStructName);
            line{subL+3}=sprintf('qLine{1}=%s(trigIndex).question{q};', studyInfo.qStructName);
            line{subL+4}=sprintf('qLine{2}=sprintf(''On a scale of 1 (%%s) to %g (%%s),'',qLow,qHigh);', nthNum);
            line{subL+5}='qLine{3}=''use the number keys at the top of the keyboard.'';';
            line{subL+7}='onQ=true;';
            line{subL+8}='tic;';
            line{subL+9}='while onQ';
            line{subL+10}='Screen(''FillRect'',wPtr,bgColor);';
            line{subL+11}='Screen(''TextSize'', wPtr, 20);';
            line{subL+12}='mytext = sprintf(''%s \n\n%s \n\n%s'',qLine{1},qLine{2},qLine{3});';
            line{subL+13}=sprintf(['[~, ~, ~] = DrawFormattedText(wPtr, mytext,',...
                '''center'', ''center'', fontColor);']);
            line{subL+14}='Screen(wPtr, ''Flip'');';
            line{subL+15}='HideCursor;';
            line{subL+16}='[~, keyCode, ~] = KbWait([], 2);';
            tabLine=subL+10:subL+16;
            dTabLine=[];
            tTabLine=[];
            subL=subL+16;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clearDin(s)';
                        line{subL+3}='s.stop();';
                        line{subL+4}='release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='% clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='% clearDin(s)';
                        line{subL+3}='% s.stop();';
                        line{subL+4}='% release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+4}='% clearDin(s)';
                        line{subL+5}=sprintf('res=%g;',k);
                        line{subL+6}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='if status~=0';
                        line{subL+5}='display([erMS ''. Goodbye.''])';
                        line{subL+6}='error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='if status~=0';
                        line{subL+5}='display([erMS ''. Goodbye.''])';
                        line{subL+6}='error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='% if status~=0';
                        line{subL+5}='% display([erMS ''. Goodbye.''])';
                        line{subL+6}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='% end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+4}='% if status~=0';
                        line{subL+5}='% display([erMS ''. Goodbye.''])';
                        line{subL+6}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+7}='% end';
                        line{subL+8}=sprintf('res=%g;',k);
                        line{subL+9}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4 subL+7:subL+9];
                        tTabLine=[tTabLine subL+5:subL+6];
                        subL=subL+9;
                    end
                end
            else
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('res=%g;',k);
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='rTime=toc;';
                        line{subL+3}=sprintf('res=%g;',k);
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            end
            
            line{subL+1}='end';
            line{subL+2}='end';
            tabLine=[tabLine subL+1];
            
        case 5
            
            studyInfo=wdrawmyoptions(studyInfo);
            
            line{1}=sprintf(['function [res,rTime]=questionTrial',...
                '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex)'], studyInfo.qStructName);
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen and draws little boxes that can';
            line{4}='% be clicked with the mouse to select the response. It exits when a response is made.';
            dLines=4;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            line{dOS+5}='KbName(''UnifyKeyNames'');';
            line{dOS+6}='[xC, yC] = RectCenter(wRect);';
            line{dOS+7}='sL = 400;';
            line{dOS+8}='x = xC;';
            line{dOS+9}='y = yC;';
            line{dOS+10}='SetMouse(x, y, wPtr)';
            
            line{dOS+12}='noChoice = 1;';
            line{dOS+13}='tic';
            line{dOS+14}='while noChoice';
            line{dOS+15}='Screen(''FillRect'',wPtr,bgColor);';
            line{dOS+16}=sprintf('%s;',studyInfo.fLine.drawmopt);
            line{dOS+17}='Screen(''Flip'',wPtr);';
            line{dOS+18}='ShowCursor;';
            line{dOS+19}='[~, x, y, ~] = GetClicks;';
            line{dOS+20}='[~, ~, keyCode] = KbCheck;';
            line{dOS+21}=sprintf('if keyCode(KbName(''%s''))',studyInfo.fQuitKey);
            line{dOS+22}='sca';
            line{dOS+23}='clear all;';
            line{dOS+24}='end';
            line{dOS+25}='if x>((xC-sL)-100) && x<((xC-sL)+100) && y>(yC+115) && y<(yC+200)';
            line{dOS+26}='timeElapsed = toc;';
            line{dOS+27}=sprintf('choice=''%s'';', studyInfo.stimNStruct.stimAText);
            line{dOS+28}='noChoice=0;';
            line{dOS+29}='elseif x>((xC+sL)-100) && x<(xC+sL)+100 && y>(yC+115) && y<(yC+200)';
            line{dOS+30}='timeElapsed = toc;';
            line{dOS+31}=sprintf('choice=''%s'';', studyInfo.stimNStruct.stimBText);
            line{dOS+32}='noChoice=0;';
            line{dOS+33}='elseif x>(xC-100) && x<(xC+100) && y>(yC+115) && y<(yC+200)';
            line{dOS+34}='timeElapsed = toc;';
            line{dOS+35}='choice=''SAME'';';
            line{dOS+36}='noChoice=0;';
            line{dOS+37}='end';
            line{dOS+38}='end';
            line{dOS+39}='rTime = timeElapsed;';
            line{dOS+40}='res=choice;';
            tabLine=[dOS+15:dOS+21 dOS+24:dOS+25 dOS+29 dOS+33 dOS+37];
            dTabLine=[dOS+22:dOS+23 dOS+26:dOS+28 dOS+30:dOS+32 dOS+34:dOS+36];
            subL=dOS+41;
            
            line{subL+1}='tic';
            line{subL+2}='while toc<.3';
            line{subL+3}='end';
            line{subL+4}='Screen(''Close'');';
            
    end
else
    switch rOpts
        case 1
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex, s)'], studyInfo.qStructName);
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)%%, s)'], studyInfo.qStructName);
            else
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)'], studyInfo.qStructName);
            end
            
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with options to choose from';
            line{4}='% a scale of key press 1 (low extremity) to 9 (high extremity) to best answer';
            line{5}='% the question. Exiting the screen is very any key press from 1 - 9. Or from the';
            line{6}='% force quit key.';
            dLines=6;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}=sprintf('escapeKey = KbName(''%s'');', studyInfo.fQuitKey);
            subL=dOS+9;
            
            kbNums = {'1!' '2@' '3#' '4$' '5%' '6^' '7&' '8*' '9('};
            for i=1:length(kbNums)
                line{subL+i}=sprintf('num%02d = KbName(''%s'');', i, kbNums{i});
            end
            subL=subL+i+1;
            
            line{subL+1}=sprintf('qLow=%s(trigIndex).qLow{q};', studyInfo.qStructName);
            line{subL+2}=sprintf('qHigh=%s(trigIndex).qHigh{q};',studyInfo.qStructName);
            line{subL+3}=sprintf('qLine{1}=%s(trigIndex).question{q};', studyInfo.qStructName);
            line{subL+4}='qLine{2}=sprintf(''On a scale of 1 (%s) to 9 (%s),'',qLow,qHigh);';
            line{subL+5}='qLine{3}=''use the number keys at the top of the keyboard.'';';
            line{subL+7}='onQ=true;';
            line{subL+8}='tic;';
            line{subL+9}='while onQ';
            line{subL+10}='Screen(''FillRect'',wPtr,bgColor);';
            line{subL+11}='Screen(''TextSize'', wPtr, 20);';
            line{subL+12}='mytext = sprintf(''%s \n\n%s \n\n%s'',qLine{1},qLine{2},qLine{3});';
            line{subL+13}=sprintf(['[~, ~, ~] = DrawFormattedText(wPtr, mytext,',...
                '''center'', ''center'', fontColor);']);
            line{subL+14}='Screen(wPtr, ''Flip'');';
            line{subL+15}='HideCursor;';
            line{subL+16}='[~, keyCode, ~] = KbWait([], 2);';
            tabLine=subL+10:subL+16;
            dTabLine=[];
            tTabLine=[];
            subL=subL+16;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clearDin(s)';
                        line{subL+3}='s.stop();';
                        line{subL+4}='release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='% clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='% clearDin(s)';
                        line{subL+3}='% s.stop();';
                        line{subL+4}='% release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='% clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='if status~=0';
                        line{subL+4}='display([erMS ''. Goodbye.''])';
                        line{subL+5}='error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='if status~=0';
                        line{subL+4}='display([erMS ''. Goodbye.''])';
                        line{subL+5}='error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='% if status~=0';
                        line{subL+4}='% display([erMS ''. Goodbye.''])';
                        line{subL+5}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='% end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='% if status~=0';
                        line{subL+4}='% display([erMS ''. Goodbye.''])';
                        line{subL+5}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='% end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    end
                end
            else
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2];
                        subL=subL+2;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2];
                        subL=subL+2;
                    end
                end
            end
            
            line{subL+1}='end';
            line{subL+2}='end';
            tabLine=[tabLine subL+1];
            
        case 2
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex, s)'], studyInfo.qStructName);
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)%%, s)'], studyInfo.qStructName);
            else
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)'], studyInfo.qStructName);
            end
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with options to choose from';
            line{4}='% a scale of key press 1 (low extremity) to 5 (high extremity) to best answer';
            line{5}='% the question. Exiting the screen is very any key press from 1 - 5. Or from the';
            line{6}='% force quit key.';
            dLines=6;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}=sprintf('escapeKey = KbName(''%s'');', studyInfo.fQuitKey);
            subL=dOS+9;
            
            kbNums = {'1!' '2@' '3#' '4$' '5%'};
            for i=1:length(kbNums)
                line{subL+i}=sprintf('num%02d = KbName(''%s'');', i, kbNums{i});
            end
            subL=subL+i+1;
            
            line{subL+1}=sprintf('qLow=%s(trigIndex).qLow{q};', studyInfo.qStructName);
            line{subL+2}=sprintf('qHigh=%s(trigIndex).qHigh{q};',studyInfo.qStructName);
            line{subL+3}=sprintf('qLine{1}=%s(trigIndex).question{q};', studyInfo.qStructName);
            line{subL+4}='qLine{2}=sprintf(''On a scale of 1 (%s) to 5 (%s),'',qLow,qHigh);';
            line{subL+5}='qLine{3}=''use the number keys at the top of the keyboard.'';';
            line{subL+7}='onQ=true;';
            line{subL+8}='tic;';
            line{subL+9}='while onQ';
            line{subL+10}='Screen(''FillRect'',wPtr,bgColor);';
            line{subL+11}='Screen(''TextSize'', wPtr, 20);';
            line{subL+12}='mytext = sprintf(''%s \n\n%s \n\n%s'',qLine{1},qLine{2},qLine{3});';
            line{subL+13}=sprintf(['[~, ~, ~] = DrawFormattedText(wPtr, mytext,',...
                '''center'', ''center'', fontColor);']);
            line{subL+14}='Screen(wPtr, ''Flip'');';
            line{subL+15}='HideCursor;';
            line{subL+16}='[~, keyCode, ~] = KbWait([], 2);';
            tabLine=subL+10:subL+16;
            dTabLine=[];
            tTabLine=[];
            subL=subL+16;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clearDin(s)';
                        line{subL+3}='s.stop();';
                        line{subL+4}='release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='% clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='% clearDin(s)';
                        line{subL+3}='% s.stop();';
                        line{subL+4}='% release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='% clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='if status~=0';
                        line{subL+4}='display([erMS ''. Goodbye.''])';
                        line{subL+5}='error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='if status~=0';
                        line{subL+4}='display([erMS ''. Goodbye.''])';
                        line{subL+5}='error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='% if status~=0';
                        line{subL+4}='% display([erMS ''. Goodbye.''])';
                        line{subL+5}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='% end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='% if status~=0';
                        line{subL+4}='% display([erMS ''. Goodbye.''])';
                        line{subL+5}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='% end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    end
                end
            else
                for k=1:length(kbNums)+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2];
                        subL=subL+2;
                    elseif k==(length(kbNums)+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2];
                        subL=subL+2;
                    end
                end
            end
            
            line{subL+1}='end';
            line{subL+2}='end';
            tabLine=[tabLine subL+1];
            
        case 3
            
            
            studyInfo=wdrawmyscaleQ(studyInfo);
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready')
                line{1}=sprintf(['function questionTrial',...
                    '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex, s)'], studyInfo.qStructName);
                
                line{24}='clearDin(s)';
                line{25}='s.stop();';
                line{26}='release(s);';
                
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function questionTrial',...
                    '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex)%%, s)'], studyInfo.qStructName);
                
                line{24}='% clearDin(s)';
                line{25}='% s.stop();';
                line{26}='% release(s);';
            else
                line{1}=sprintf(['function questionTrial',...
                    '(wPtr, wRect, bgColor, fontColor, %s, q, trigIndex)'], studyInfo.qStructName);
                
            end
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with an analog slider that is';
            line{4}='% mouse controlled so you can move the slider from the low extremity to the high';
            line{5}='% extremity to best rate your response to the question. The slider scale translate';
            line{6}='% from 0 - 100 for any behavioral studies and 1-10 for any eeg or neurophysiological';
            line{7}='% study.';
            dLines=7;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;
            
            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}='[xC, yC] = RectCenter(wRect);';
            line{dOS+10}='sL = 400;';
            line{dOS+11}='x = xC; y = yC;';
            line{dOS+13}='SetMouse(x, y, wPtr)';
            line{dOS+14}='buttons = [];';
            line{dOS+15}='tic;';
            line{dOS+16}='while ~any(buttons)';
            line{dOS+17}='Screen(''FillRect'',wPtr,bgColor);';
            line{dOS+18}=sprintf('%s;',studyInfo.fLine.drawmsQ);
            line{dOS+19}='Screen(''Flip'',wPtr);';
            line{dOS+20}='HideCursor;';
            line{dOS+21}='[x, ~, buttons] = GetMouse;';
            line{dOS+22}='[~, ~, keyCode] = KbCheck;';
            line{dOS+23}=sprintf('if keyCode(KbName(''%s''))',studyInfo.fQuitKey);
            line{dOS+27}='clear all;';
            line{dOS+28}='sca';
            line{dOS+29}='end';
            line{dOS+30}='end';
            line{dOS+31}='toc;';
            tabLine=[dOS+17:dOS+23 dOS+29];
            dTabLine=dOS+24:dOS+28;
            subL=dOS+32;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready')
                line{subL+1}='if x<=(xC-sL)';
                line{subL+2}='xScaled=1;';
                line{subL+3}='elseif x>=(xC+sL)';
                line{subL+4}='xScaled=100;';
                line{subL+5}='else';
                line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='end';
                line{subL+9}='res=round(xScaled/10);';
                line{subL+10}='s.outputSingleScan(de2bi(res,12));';
                line{subL+11}='clearDin(s)';
                tabLine=[tabLine subL+2 subL+4 subL+6];
                
                
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{subL+1}='% if x<=(xC-sL)';
                line{subL+2}='% xScaled=1;';
                line{subL+3}='% elseif x>=(xC+sL)';
                line{subL+4}='% xScaled=100;';
                line{subL+5}='% else';
                line{subL+6}='% xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='% end';
                line{subL+9}='% res=round(xScaled/10);';
                line{subL+10}='% s.outputSingleScan(de2bi(res,12));';
                line{subL+11}='% clearDin(s)';
                line{subL+13}='Screen(''Close'');';
                tabLine=[tabLine subL+2 subL+4 subL+6];
                subL=subL+14;
                
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                line{subL+1}='if x<=(xC-sL)';
                line{subL+2}='xScaled=1;';
                line{subL+3}='elseif x>=(xC+sL)';
                line{subL+4}='xScaled=100;';
                line{subL+5}='else';
                line{subL+6}='xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='end';
                line{subL+9}='res=round(xScaled/10);';
                line{subL+10}='[status, erMS] = NetStation(''Event'',sprintf(''%04g'',res));';
                line{subL+11}='if status~=0';
                line{subL+12}='display([erMS ''. Goodbye.''])';
                line{subL+13}='error(''Failure in sending event to NetStation.'');';
                line{subL+14}='end';
                tabLine=[tabLine subL+2 subL+4 subL+6 subL+12:subL+13];
                subL=subL+15;
                
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                line{subL+1}='% if x<=(xC-sL)';
                line{subL+2}='% xScaled=1;';
                line{subL+3}='% elseif x>=(xC+sL)';
                line{subL+4}='% xScaled=100;';
                line{subL+5}='% else';
                line{subL+6}='% xScaled=(x-(xC-sL))*(1./8);';
                line{subL+7}='% end';
                line{subL+9}='% res=round(xScaled/10);';
                line{subL+10}='% [status, erMS] = NetStation(''Event'',sprintf(''%04g'',res));';
                line{subL+11}='% if status~=0';
                line{subL+12}='% display([erMS ''. Goodbye.''])';
                line{subL+13}='% error(''Failure in sending event to NetStation.'');';
                line{subL+14}='% end';
                tabLine=[tabLine subL+2 subL+4 subL+6 subL+12:subL+13];
                subL=subL+15;
            end
            
            line{subL+1}='tic';
            line{subL+2}='while toc<.3';
            line{subL+3}='end';
            line{subL+4}='Screen(''Close'');';
            
        case 4
            
            nthNum=studyInfo.questSOpts.nthNum;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex, s)'], studyInfo.qStructName);
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)%%, s)'], studyInfo.qStructName);
            else
                line{1}=sprintf(['function questionTrial(wPtr, bgColor, fontColor, %s,',...
                    ' q, trigIndex)'], studyInfo.qStructName);
            end
            
            
            line{2}=sprintf('%% %s', line{1});
            line{3}='% This function displays a question on the screen with options to choose from';
            line{4}=sprintf('%% a scale of key press 1 (low extremity) to %g (high extremity) to best answer', nthNum);
            line{5}=sprintf('%% the question. Exiting the screen is very any key press from 1 - %g. Or from the', nthNum);
            line{6}='% force quit key.';
            dLines=6;
            line{dLines+1}='%';
            line{dLines+2}='% This script was generated by AudExpCreator.';
            line{dLines+3}='% (c) Duc T. Nguyen and Blair Kaneshiro, 2017';
            line{dLines+4}='% Distributed under Creative Commons Zero (CC0) license';
            line{dLines+5}='% Contact: audexpcreator@gmail.com';
            dOS=5;

            line{dOS+8}='KbName(''UnifyKeyNames'');';
            line{dOS+9}=sprintf('escapeKey = KbName(''%s'');', studyInfo.fQuitKey);
            subL=dOS+9;
            
            kbNums = {'1!' '2@' '3#' '4$' '5%' '6^' '7&' '8*' '9('};
            for i=1:nthNum
                line{subL+i}=sprintf('num%02d = KbName(''%s'');', i, kbNums{i});
            end
            subL=subL+i+1;
            
            line{subL+1}=sprintf('qLow=%s(trigIndex).qLow{q};', studyInfo.qStructName);
            line{subL+2}=sprintf('qHigh=%s(trigIndex).qHigh{q};',studyInfo.qStructName);
            line{subL+3}=sprintf('qLine{1}=%s(trigIndex).question{q};', studyInfo.qStructName);
            line{subL+4}=sprintf('qLine{2}=sprintf(''On a scale of 1 (%%s) to %g (%%s),'',qLow,qHigh);', nthNum);
            line{subL+5}='qLine{3}=''use the number keys at the top of the keyboard.'';';
            line{subL+7}='onQ=true;';
            line{subL+8}='tic;';
            line{subL+9}='while onQ';
            line{subL+10}='Screen(''FillRect'',wPtr,bgColor);';
            line{subL+11}='Screen(''TextSize'', wPtr, 20);';
            line{subL+12}='mytext = sprintf(''%s \n\n%s \n\n%s'',qLine{1},qLine{2},qLine{3});';
            line{subL+13}=sprintf(['[~, ~, ~] = DrawFormattedText(wPtr, mytext,',...
                '''center'', ''center'', fontColor);']);
            line{subL+14}='Screen(wPtr, ''Flip'');';
            line{subL+15}='HideCursor;';
            line{subL+16}='[~, keyCode, ~] = KbWait([], 2);';
            tabLine=subL+10:subL+16;
            dTabLine=[];
            tTabLine=[];
            subL=subL+16;
            
            if strcmp(studyInfo.niReady,'Yes NI Device Ready');
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clearDin(s)';
                        line{subL+3}='s.stop();';
                        line{subL+4}='release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not NI Device Ready')
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='% clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='% clearDin(s)';
                        line{subL+3}='% s.stop();';
                        line{subL+4}='% release(s);';
                        line{subL+5}='clear all;';
                        line{subL+6}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+6];
                        subL=subL+6;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% s.outputSingleScan(de2bi(%g,12));',k);
                        line{subL+3}='% clearDin(s)';
                        line{subL+4}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+4];
                        subL=subL+4;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Yes Ethernet Ready')
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='if status~=0';
                        line{subL+4}='display([erMS ''. Goodbye.''])';
                        line{subL+5}='error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('[status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='if status~=0';
                        line{subL+4}='display([erMS ''. Goodbye.''])';
                        line{subL+5}='error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    end
                end
            elseif strcmp(studyInfo.niReady,'Not Ethernet Ready')
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='% if status~=0';
                        line{subL+4}='% display([erMS ''. Goodbye.''])';
                        line{subL+5}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='% end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}=sprintf('%% [status, erMS] = NetStation(''Event'',''%04g'');', k);
                        line{subL+3}='% if status~=0';
                        line{subL+4}='% display([erMS ''. Goodbye.''])';
                        line{subL+5}='% error(''Failure in sending event to NetStation.'');';
                        line{subL+6}='% end';
                        line{subL+7}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3 subL+6:subL+7];
                        tTabLine=[tTabLine subL+4:subL+5];
                        subL=subL+7;
                    end
                end
            else
                for k=1:nthNum+1
                    if k==1
                        line{subL+1}=sprintf('if keyCode(num%02d)',k);
                        line{subL+2}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2];
                        subL=subL+2;
                    elseif k==(nthNum+1)
                        line{subL+1}='elseif keyCode(escapeKey)';
                        line{subL+2}='clear all;';
                        line{subL+3}='sca';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2:subL+3];
                        subL=subL+3;
                    else
                        line{subL+1}=sprintf('elseif keyCode(num%02d)',k);
                        line{subL+2}='onQ=false;';
                        tabLine=[tabLine subL+1];
                        dTabLine=[dTabLine subL+2];
                        subL=subL+2;
                    end
                end
            end
            
            line{subL+1}='end';
            line{subL+2}='end';
            tabLine=[tabLine subL+1];
           
    end
end

studyInfo.fLine.qTrial = line{1}(10:end);

studyInfo = studyInfo;

fName = 'questionTrial';
fID = fopen([studyInfo.path filesep fName '.m'],'w');
for i=1:length(line)
    if any(ismember(i,tabLine))
        fprintf(fID,'\t%s\n',line{i});
    elseif any(ismember(i,dTabLine))
        fprintf(fID,'\t\t%s\n',line{i});
    elseif any(ismember(i,tTabLine))
        fprintf(fID,'\t\t\t%s\n',line{i});
    else
        fprintf(fID,'%s\n',line{i});
    end
end
fclose(fID);


